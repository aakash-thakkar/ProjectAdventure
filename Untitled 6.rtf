{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Bold;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red179\green179\blue179;\red0\green0\blue0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
//QPixmap\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
pixgray2;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
//QPixmap\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
pixgray3;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
//QPixmap\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
pixgray4;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
/*for(int\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
0;\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i<atoi(cameraSettings2.numOfCam.c_str());\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i++)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
if(i\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
<\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
1)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
QThread*\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
thread\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
new\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
QThread;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
worker\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
new\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
fetchCam1(captureS1);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
worker->moveToThread(thread);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
//connect(worker,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SIGNAL(error(QString)),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
this,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SLOT(errorString(QString)));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
connect(thread,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SIGNAL(started()),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
worker,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SLOT(process()));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
connect(worker,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SIGNAL(finished()),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
this,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SLOT(updateCam1()));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
connect(worker,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SIGNAL(finished()),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
worker,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SLOT(process()));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
//connect(worker,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SIGNAL(finished()),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
worker,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SLOT(deleteLater()));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
//connect(thread,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SIGNAL(finished()),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
thread,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
SLOT(deleteLater()));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
thread->start();\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
thread->setPriority(QThread::HighPriority);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
/*captureS1.read(src);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
for(int\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i=0;\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i<=prod.secCount;i++)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
cv::rectangle(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x+prod.sec[i].roi.width,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.height),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
8,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
0);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
string\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"Value:\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].Value;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
putText(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x-50,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
(prod.sec[i].roi.y+prod.sec[i].roi.height)+25),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
FONT_HERSHEY_COMPLEX,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
1,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
if(i\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
<\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
captureS2.read(src);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
for(int\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i=0;\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i<=prod.secCount;i++)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
cv::rectangle(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x+prod.sec[i].roi.width,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.height),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
8,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
0);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
string\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"Value:\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].Value;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
putText(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x-50,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
(prod.sec[i].roi.y+prod.sec[i].roi.height)+25),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
FONT_HERSHEY_COMPLEX,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
1,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
pixgray2\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
convertFromMat(src);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
if(i\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
<\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
3)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
captureS3.read(src);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
for(int\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i=0;\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i<=prod.secCount;i++)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
cv::rectangle(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x+prod.sec[i].roi.width,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.height),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
8,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
0);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
string\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"Value:\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].Value;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
putText(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x-50,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
(prod.sec[i].roi.y+prod.sec[i].roi.height)+25),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
FONT_HERSHEY_COMPLEX,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
1,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
pixgray3\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
convertFromMat(src);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
if(i\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
<\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
4)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
captureS4.read(src);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
for(int\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i=0;\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i<=prod.secCount;i++)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
cv::rectangle(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x+prod.sec[i].roi.width,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.height),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
8,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
0);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
string\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"Value:\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].Value;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
putText(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x-50,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
(prod.sec[i].roi.y+prod.sec[i].roi.height)+25),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
FONT_HERSHEY_COMPLEX,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
1,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
pixgray4\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
convertFromMat(src);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
\}*/\
\
\
\
\
/*for(int\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i=0;\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
i<=prod.secCount;i++)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
cv::rectangle(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x+prod.sec[i].roi.width,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.height),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
8,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
0);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
string\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"Value:\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
"\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].Value;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
putText(src,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x-50,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
(prod.sec[i].roi.y+prod.sec[i].roi.height)+25),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
FONT_HERSHEY_COMPLEX,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
1,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
colr2[i],\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
if(trigger\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
==\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
true)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
string\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
print\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
getValue(prod,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
src(Rect(Point(prod.sec[i].roi.x+2,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y+2),\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
Point(prod.sec[i].roi.x+prod.sec[i].roi.width-2,\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.y\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
+\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
prod.sec[i].roi.height-2))),i);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
QPixmap\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
tmp\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
convertFromMat(temp2);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
ui->label_DEBUG->setPixmap(tmp);\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
switch(i)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
case\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
0:\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
ui->value_1->setText(QString::fromStdString(print));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
break;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
case\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
1:\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
ui->value_2->setText(QString::fromStdString(print));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
break;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
case\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
2:\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
ui->value_3->setText(QString::fromStdString(print));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
break;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
case\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
3:\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
ui->value_4->setText(QString::fromStdString(print));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
break;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
case\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
4:\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
ui->value_5->setText(QString::fromStdString(print));\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
                \cf2 \expnd0\expndtw0\kerning0
break;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
            \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
\}\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
if(trigger\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
==\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
true)\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
\{\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
        \cf2 \expnd0\expndtw0\kerning0
trigger\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
=\cf3 \expnd0\expndtw0\kerning0
 \cf2 \expnd0\expndtw0\kerning0
false;\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
    \cf2 \expnd0\expndtw0\kerning0
\}*/\cf0 \expnd0\expndtw0\kerning0
\
12345\
\
110\
75\
\
24429840\
mt@1966\
Andheri West\
\
Buy Printer - Laser Black and White\
\

\f1\b FD954B\
\
4BB0FD\
\
192\
\
\
\pard\pardeftab720

\f2\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 FC664B - color\
\
\
<div class="searchbar" style="font-family: 'Happy Monkey', cursive; font-weight: bold;">\
        	<!--<h1 style="font-size: 54px; letter-spacing: 5px;">Lets Go: </h1><input onclick="showSearchOption()" style="letter-spacing: 5px; font-size: 45px; color: #000;" class="searchBox" type="text" />\
            -->\
            \
            <div class="searchOptions">\
            	<div class="searchOption" style="background-image:url(images/searchImages/1.png);">\
                <p>Trekking</p>\
                </div>\
                <div class="searchOption" style="background-image:url(images/searchImages/2.png)">\
                <p>Rafting</p>\
                </div>\
                <div class="searchOption" style="background-image:url(images/searchImages/3.png)">\
                <p>Camping</p>\
                </div>\
                <div class="searchOptionCenter" style="background-image:url(images/searchImages/4.png);">\
                <p>Anything</p>\
                </div>\
                <div class="searchOption" style="background-image:url(images/searchImages/5.png)">\
                <p>Cycling</p>\
                </div>\
                <div class="searchOption" style="background-image:url(images/searchImages/6.png)">\
                <p>Scuba Dive</p>\
                </div>\
                <div class="searchOption" style="background-image:url(images/searchImages/7.png)">\
                <p>Paragliding</p>\
                </div>\
                <div style="clear:both;"></div>\
            </div>\
            \
    </div>}